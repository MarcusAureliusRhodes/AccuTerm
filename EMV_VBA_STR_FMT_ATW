SUBROUTINE EMV_VBA_STR_FMT_ATW( NEW_STRG, OLD_STRG )

! Copyright 1994-2020 Marcus Rhodes <marcus1@thinqware.com>

!           This program is free software; You can redistribute it and/or
!           modify it under the terms of the GNU general  public  license
!           version 3 as published by the Free Software Foundation.

! Modified: 07/06/2020 19:48:00 by Marcus

! Platform: Any Pick; Any OS; AccuTerm; Any emulation

! Function: Adjusts text strings for compatibility with  VBA  scripts  by
!           neutralizing all Pick-style  string-delimiters  (",', and \),
!           as well as the backtick (because I used it a  lot  to  reduce
!           code size).

! Var_Name IO Typ Description____________________________________________
! NEW_STRG  < Str The adjusted string
! OLD_STRG >  Str The string to be adjusted

! Upcoming: Neutralize @VMs, @SMs, and @TMs, too.
!           Change is the only constant. -- Heraclitus

! Old name: N/A

! Catalog : EMV_VBA_STR_FMT_ATW

! New name: N/A

   EQU IDENTITY TO 'EMV_VBA_STR_FMT_ATW'

   ! Literal double-quotes can foul up a VBA  script.  Single-quotes  can
   ! foul up DataBasic.  And I use the backtick for my own  purposes,  so
   ! they all have to be neutralized.

   ! Ain't misbehavin' -> ...
   ! Ain"&Chr$(39)&"t misbehavin"&Chr$(39)&"

   NEW_STRG  = CHANGE( OLD_STRG, '"', '"&Chr$(34)&"' )
   NEW_STRG  = CHANGE( NEW_STRG, "'", '"&Chr$(39)&"' )
   NEW_STRG  = CHANGE( NEW_STRG, '\', '"&Chr$(92)&"' )
   NEW_STRG  = CHANGE( NEW_STRG, '`', '"&Chr$(96)&"' )

   ! Next, install the line-breaks and end quotes.

   NEW_STRG  = '"' : CHANGE( NEW_STRG, @AM, '"&vbCrLf&"' ) : '"'

   ! Add code to find/replace any other Pick  dynamic  array  delimiters,
   ! too.  But with what?

   ! Condense redundant contatenation.

   ! ..."&Chr$(96)&""&Chr$(96)&"... -> ...
   ! ..."&Chr$(96)&Chr$(96)&"...

   NEW_STRG  = CHANGE( NEW_STRG, '&""&', '&' )
   NEW_STRG  = CHANGE( NEW_STRG, '"&"' , ''  )

   ! Drop redundant leading/trailing null-strings.

   ! "Ain"&Chr$(39)&"t misbehavin"&Chr$(39)&"" -> ...
   ! "Ain"&Chr$(39)&"t misbehavin"&Chr$(39)

   IF NEW_STRG[ 1, 3 ] EQ '""&' THEN

      NEW_STRG  = NEW_STRG[ 4, LEN( NEW_STRG ) ]

   END

   IF NEW_STRG[ 3 ] EQ '&""' THEN

      NEW_STRG  = NEW_STRG[ 1, LEN( NEW_STRG ) - 3 ]

   END

RETURN ;! to the calling program.
